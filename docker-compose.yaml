services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.54.0
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"
  postgres:
    container_name: postgres
    image: postgres:16.4
    ports:
      - "5432:5432"
    #volumes:
    #  - ./grafana/storage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${GF_DATABASE_USER} -U ${GF_DATABASE_PASSWORD}"]
      timeout: 10s
      retries: 10
    environment:
      - POSTGRES_DB=${GF_DATABASE_NAME}
      - POSTGRES_USER=${GF_DATABASE_USER}
      - POSTGRES_PASSWORD=${GF_DATABASE_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pg_data
  grafana-node-1:
    container_name: grafana-node-1
    image: grafana/grafana:${GRAFANA_VERSION:-11.5.2}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_UNIFIED_ALERTING_HA_REDIS_ADDRESS=redis_alerting_ha:6379
      - GF_UNIFIED_ALERTING_HA_REDIS_PREFIX=grafana_ha
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=${GF_DATABASE_NAME}
      - GF_DATABASE_USER=${GF_DATABASE_USER}
      - GF_DATABASE_PASSWORD=${GF_DATABASE_PASSWORD}
      - GF_DATABASE_SSL_MODE=disable
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
  grafana-node-2:
    container_name: grafana-node-2
    image: grafana/grafana:${GRAFANA_VERSION:-11.5.2}
    ports:
      - "3001:3000"
    depends_on:
      - grafana-node-1
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_UNIFIED_ALERTING_HA_REDIS_ADDRESS=redis_alerting_ha:6379
      - GF_UNIFIED_ALERTING_HA_REDIS_PREFIX=grafana_ha
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=${GF_DATABASE_NAME}
      - GF_DATABASE_USER=${GF_DATABASE_USER}
      - GF_DATABASE_PASSWORD=${GF_DATABASE_PASSWORD}
      - GF_DATABASE_SSL_MODE=disable
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - grafana-node-1
      - grafana-node-2
  redis_alerting_ha:
    container_name: redis
    image: redis/redis-stack-server:latest
    ports:
      - '6379:6379'
  loki:
    image: grafana/loki:3.3.0
    container_name: loki
    command: ["--validation.discover-service-name=[]", "--validation.discover-log-levels=false", "-config.file=/etc/loki/loki.yaml"]
    volumes:
      - ./loki:/etc/loki/
    ports:
      - "3100:3100"
  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager/
    ports:
      - 9093:9093
      